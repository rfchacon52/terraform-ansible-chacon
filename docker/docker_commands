
# Docker Commands exanple

# https;//hub.docker.com


1. Command downloads image from docker hub runs centos then exitsb
 docker run centos

2. Command running a bash shell inside the container

 docker run -it centos bash

3. Run the container sleep for 20000 sec

 docker run -d centos sleep 2000 

4. List running containers  

 docker ps  

5. Command to remove running containers give the first few numbers of the id
 docker rm <id>

6. Download inage only 

docker pull <image>

7. Deploy a container 

docker run -d ubuntu sleep 100

8. docker exec <id> cat /etc/release*
 
9. docker run -it <image>

10. When running a Docker container, you can map a port on the container to a port on the host or external network using the -p or â€”publish options. If you use the below command it will publish nginx, for instance, would publish port 80 from the container to port 8080 on the host or external network.

docker run -p 8080:80  [Options]  <Container_name>


11.

   docker run -v /opt/datadir:/var/lib/mysql msql

    Mapps  "/var/lib/mysql"  within container to "/opt/datadir" on external filesystem

12.  docker inspect <container-name> 

13. View the logs

    docker logs <container-name>

14.Run the container in detached mode with -d

     docker run  -d <container> sleep 1500

15. Run container in attached mode shows standard out 

  docker attach <id> 


14. To use Docker with Jenkins use a port map to map the container port to the hosts port and map a volume to persist the data.


    docker run -p 8080:8080 -v /root/my-jenkins-data:/var/jenkins_home -u root jenkins

15.  

    docker run -p 8080:38282 -name kodekloud -d  kodekloud/simple-webapp 

14.
docker ps | awk '{print $1;}' | xargs  docker inspect --format='{{.Config.Image}} {{range $p, $conf := .NetworkSettings.Ports}} {{$p}} -> {{(index $conf 0).HostPort}} {{end}}'



Create Docker image:

  




